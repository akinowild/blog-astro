---
import Layout from "@/layouts/Layout.astro";
import MarkdownIt from 'markdown-it'
import hljs from 'highlight.js'
import 'highlight.js/styles/github.css'

const md = new MarkdownIt({
    html: true,
    linkify: true,
    highlight: function (str, lang='vue') {
        if (lang && hljs.getLanguage(lang)) {
            try {
                return '<pre class="hljs"><code>' +
                    hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +
                    '</code></pre>';
            } catch (__) {}
        }

        return '<pre class="hljs"><code>' + md.utils.escapeHtml(str) + '</code></pre>';
    }
})
const { id } = Astro.params

import {createDirectus,rest,readItem} from "@directus/sdk";

const { CMS_URL } = import.meta.env

const client = createDirectus(CMS_URL).with(rest());

const item = await client.request(
    readItem('blog', id)
);

---

<Layout title={item.title} >
    <div class="detail">
        <div class="detail-cover">
            <!--<img src={item.cover}  alt=""/>-->
        </div>
        <div class="detail-title">{item.title}</div>
        <div class="detail-time">
            {item.date_created}
        </div>
        <div class="detail-html">
            <Fragment set:html={md.render(item.html)} />

        </div>
    </div>
</Layout>
<style>
    @import "https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.1.0/github-markdown.min.css";

    main {
        margin: auto;
        padding: 1rem;
        width: 800px;
        max-width: calc(100% - 2rem);
        color: white;
        font-size: 20px;
        line-height: 1.6;
    }
    .astro-a {
        position: absolute;
        top: -32px;
        left: 50%;
        transform: translatex(-50%);
        width: 220px;
        height: auto;
        z-index: -1;
    }
    h1 {
        font-size: 4rem;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        margin-bottom: 1em;
    }
    .text-gradient {
        background-image: var(--accent-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 400%;
        background-position: 0%;
    }
    .instructions {
        margin-bottom: 2rem;
        border: 1px solid rgba(var(--accent-light), 25%);
        padding: 1.5rem;
        border-radius: 8px;
    }
    .instructions code {
        font-size: 0.8em;
        font-weight: bold;
        background: rgba(var(--accent-light), 12%);
        color: rgb(var(--accent-light));
        border-radius: 4px;
        padding: 0.3em 0.4em;
    }
    .instructions strong {
        color: rgb(var(--accent-light));
    }
    .link-card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
        gap: 2rem;
        padding: 0;
    }
</style>
